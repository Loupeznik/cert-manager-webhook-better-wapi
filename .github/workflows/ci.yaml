name: CI/CD

on:
  push:
    branches: ["master", "develop"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["master"]

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Download dependencies
        run: go mod download

      - name: Run go vet
        run: go vet ./...

      - name: Check formatting
        run: test -z "$(go fmt ./...)"

      - name: Build
        run: go build -o webhook .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: webhook
          path: ./webhook

  release:
    name: Release
    needs: build
    if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: webhook
          path: output

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/loupeznik/cert-manager-webhook-better-wapi:${{ steps.version.outputs.version }}
            ghcr.io/loupeznik/cert-manager-webhook-better-wapi:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: output/*
          generate_release_notes: true
          name: "${{ github.ref_name }}"
